{"version":3,"file":"bundle.cjs.js","sources":["../src/index.js"],"sourcesContent":["import Promise from 'bluebird';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nasync function filePathOneLayer(modelsPath) {\n  let fileNames = await fs.readdir(modelsPath);\n\n  let files = await Promise.map(fileNames, (fileName) => {\n    let filePath = path.join(modelsPath, fileName);\n    let fileInfo = path.parse(filePath);\n\n    if (fileInfo.ext !== '.js') {\n      return null;\n    }\n\n    return fs.stat(filePath).then((stat) => {\n      return Object.assign(\n        {\n          path: filePath,\n          stat,\n        },\n        fileInfo\n      );\n    });\n  });\n\n  return files.filter((file) => {\n    return file && file.stat && file.stat.isFile();\n  });\n}\n\nexport default filePathOneLayer;\n"],"names":["async","filePathOneLayer","modelsPath","fileNames","fs","readdir","Promise","map","fileName","filePath","path","join","fileInfo","parse","ext","stat","then","Object","assign","filter","file","isFile"],"mappings":"gOAIAA,eAAeC,iBAAiBC,OAC1BC,QAAkBC,GAAGC,QAAQH,gBAEfI,QAAQC,IAAIJ,EAAYK,QACpCC,EAAWC,KAAKC,KAAKT,EAAYM,GACjCI,EAAWF,KAAKG,MAAMJ,SAEL,QAAjBG,EAASE,IACJ,KAGFV,GAAGW,KAAKN,GAAUO,KAAMD,GACtBE,OAAOC,aAEJT,UAGRG,OAKOO,OAAQC,GACZA,GAAQA,EAAKL,MAAQK,EAAKL,KAAKM"}